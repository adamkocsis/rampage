[{"path":[]},{"path":"https://adamtkocsis.com/rampage/articles/installation.html","id":"development-version","dir":"Articles","previous_headings":"Alternative methods","what":"Development version","title":"1. Installation","text":"encounter technical problems package described anywhere, might want take look development version. wish install development version, recommend manual installation: 1. Clone repository local hard drive. 2. Open terminal navigate directory cloned. rampage directory visible . 3. Run line terminal see error suggesting R found, add PATH environmental variable. R packages rampage depend installed, install manually, get error. can also try devtools::install_github(\"adamkocsis/rampage\")","code":"R CMD INSTALL rampage"},{"path":"https://adamtkocsis.com/rampage/articles/rampage.html","id":"histograms","dir":"Articles","previous_headings":"","what":"Histograms","title":"Histogram examples","text":"sake minimal demonstration, rampage can used colorize bars histogram depending domain (breakpoints). can illustrate sample Gaussian distribution:","code":"set.seed(1) vals<- rnorm(50000,1,1)"},{"path":"https://adamtkocsis.com/rampage/articles/rampage.html","id":"color-tiepoint-data-frame","dir":"Articles","previous_headings":"Histograms","what":"Color tiepoint data frame","title":"Histogram examples","text":"definition color ramps depend given colors (\"color\") values tied . simplest case, can use Using default z color arguments: hist function can used set breakpoints (breaks) used define bars. color individual bars vectorized, exactly many colors many bars provided (number breaks minus one), bars colored accordingly.","code":"df <- data.frame(   z=c(-4, 1,  6),   color=gradinv(3) ) df #>    z   color #> 1 -4 #33358A #> 2  1 #FFF99A #> 3  6 #690720 ex <- expand(df, n=50) hist(vals, breaks=ex$breaks, col=ex$col, border=NA)"},{"path":"https://adamtkocsis.com/rampage/articles/rampage.html","id":"more-breaks","dir":"Articles","previous_headings":"Histograms","what":"More breaks","title":"Histogram examples","text":"number levels (breakpoints -1) directly controled n. finer resolution can achieved ","code":"exMore <- expand(df, n=100) hist(vals, breaks=exMore$breaks, col=exMore$col, border=NA)"},{"path":"https://adamtkocsis.com/rampage/articles/rampage.html","id":"more-tiepoints","dir":"Articles","previous_headings":"Histograms","what":"More tiepoints","title":"Histogram examples","text":"Specifying tiepoints data.frame give control exact placement colors. example want clearly separate values around 1 (population mean), can tie colors values just values can expanded full color ramp: can visualized hist function.  exact placement colors easily customizable tweaking z values data.frame expanded ramp. instance, want colorings reflect values (e.g. 0 important mean): Expanding full color ramp:  See package website package-specific examples.","code":"dfMoreTies <- data.frame(   z=c(-4, 0.5, 1,  1.5, 6),   color=gradinv(5) ) dfMoreTies #>      z   color #> 1 -4.0 #33358A #> 2  0.5 #76ACCE #> 3  1.0 #FFF99A #> 4  1.5 #E22C28 #> 5  6.0 #690720 exMoreTies <- rampage::expand(dfMoreTies, n=200) hist(vals, breaks=exMoreTies$breaks, col=exMoreTies$col, border=NA) dfSkewed <- data.frame(   z=c(-4, -1, 0,  1, 6),   color=gradinv(5) ) dfSkewed #>    z   color #> 1 -4 #33358A #> 2 -1 #76ACCE #> 3  0 #FFF99A #> 4  1 #E22C28 #> 5  6 #690720 exSkewed <- rampage::expand(dfSkewed, n=200) hist(vals, breaks=exSkewed$breaks, col=exSkewed$col, border=NA)"},{"path":"https://adamtkocsis.com/rampage/articles/topographies.html","id":"topography-matrices","dir":"Articles","previous_headings":"","what":"1. Topography matrices","title":"2. Topographic maps","text":"built-volcano topographic data. Attach package.","code":"data(volcano)"},{"path":"https://adamtkocsis.com/rampage/articles/topographies.html","id":"create-a-color-ramp","dir":"Articles","previous_headings":"1. Topography matrices","what":"Create a color ramp","title":"2. Topographic maps","text":"Specify tiepoints color ramp calibration. Construct actual color ramp tiepoints: Visualize color ramp.","code":"library(rampage) tiepoints <- data.frame(     z = c(0, 100, 120, 160,220),      color = c(\"#46AF64\", \"#96C869\", \"#E1D791\", \"#CDB991\", \"#7D695A\") ) # expand ramp <- expand(tiepoints, n=256)  str(ramp) #> List of 3 #>  $ col   : chr [1:256] \"#46AF64\" \"#46AF64\" \"#47AF64\" \"#48AF64\" ... #>  $ breaks: num [1:257] -0.431 0.431 1.294 2.157 3.02 ... #>  $ mid   : num [1:256] 0 0.863 1.725 2.588 3.451 ... #>  - attr(*, \"class\")= chr \"calibramp\" plot(ramp)"},{"path":"https://adamtkocsis.com/rampage/articles/topographies.html","id":"plotting-with-image","dir":"Articles","previous_headings":"1. Topography matrices","what":"Plotting with image","title":"2. Topographic maps","text":"Use color ramp plot data.  Use ramplegend function draw legend:","code":"image(volcano, breaks=ramp$breaks, col=ramp$col, axes=FALSE) image(volcano, breaks=ramp$breaks, col=ramp$col, axes=FALSE) ramplegend(\"topright\", ramp=ramp, cex=0.7, box=list(border=NA, col=\"#ffffff55\"))"},{"path":"https://adamtkocsis.com/rampage/articles/topographies.html","id":"different-shading","dir":"Articles","previous_headings":"1. Topography matrices","what":"Different shading","title":"2. Topographic maps","text":"topography, palette, different tiepoints:","code":"tiepoints2 <- data.frame(     z = c(0, 100, 110, 130,200),      color = c(\"#46AF64\", \"#96C869\", \"#E1D791\", \"#CDB991\", \"#7D695A\") ) ramp2 <- expand(tiepoints2, n=512) image(volcano, breaks=ramp2$breaks, col=ramp2$col, axes=FALSE) ramplegend(\"topright\", ramp=ramp2, cex=0.7, box=list(border=NA, col=\"#ffffff55\"))"},{"path":"https://adamtkocsis.com/rampage/articles/topographies.html","id":"changes","dir":"Articles","previous_headings":"1. Topography matrices","what":"Changes","title":"2. Topographic maps","text":"hypothetical succession assuming 5 meter increase:","code":"par(mfrow=c(3,2), mar=c(1,1,1,1)) image(volcano-10, breaks=ramp$breaks, col=ramp$col, axes=FALSE, main=\"-10 m\") image(volcano-5, breaks=ramp$breaks, col=ramp$col, axes=FALSE, main=\"-5 m\") image(volcano, breaks=ramp$breaks, col=ramp$col, axes=FALSE, main=\"+0 m\") image(volcano+5, breaks=ramp$breaks, col=ramp$col, axes=FALSE, main=\"+5 m\") image(volcano+10, breaks=ramp$breaks, col=ramp$col, axes=FALSE, main=\"+10 m\") image(volcano+15, breaks=ramp$breaks, col=ramp$col, axes=FALSE, main=\"+15 m\") ramplegend(\"bottomright\", ramp=ramp, cex=0.7, box=list(border=NA, col=\"#ffffff55\"))"},{"path":"https://adamtkocsis.com/rampage/articles/topographies.html","id":"with-imageplot","dir":"Articles","previous_headings":"1. Topography matrices","what":"With imagePlot","title":"2. Topographic maps","text":"similar effect can reached using imagePlot function fields extension package, display legend color ramp automatically.","code":"library(fields) #> Loading required package: spam #> Spam version 2.10-0 (2023-10-23) is loaded. #> Type 'help( Spam)' or 'demo( spam)' for a short introduction  #> and overview of this package. #> Help for individual functions is also obtained by adding the #> suffix '.spam' to the function name, e.g. 'help( chol.spam)'. #>  #> Attaching package: 'spam' #> The following objects are masked from 'package:base': #>  #>     backsolve, forwardsolve #> Loading required package: viridisLite #>  #> Try help(fields) to get started.  # the function call imagePlot(volcano, breaks=ramp$breaks, col=ramp$col, axes=FALSE)"},{"path":[]},{"path":"https://adamtkocsis.com/rampage/articles/topographies.html","id":"built-in-objects-for-topographies","dir":"Articles","previous_headings":"2. Georeferenced raster topography","what":"Built-in objects for topographies","title":"2. Topographic maps","text":"rampage package includes built-set topogoraphic color schemes (topos). can accessed data function. object list data.frames potential inputs expand function. instance, want generate 256 colors 'zagreb' theme, can ramp can visualized rampplot function:  shows exact values rendered specific interals height. currently accessible ramps:","code":"data(topos) topoRamp <- expand(topos$zagreb, n=256) rampplot(topoRamp) par(mfrow=c(2,3)) for(i in 1:length(topos)){         # the current color map         current<- expand(topos[[i]], n=100)         rampplot(current, xlab=names(topos[i]), breaklabs=FALSE) }"},{"path":"https://adamtkocsis.com/rampage/articles/topographies.html","id":"topographies-with-terra","dir":"Articles","previous_headings":"2. Georeferenced raster topography","what":"Topographies with terra","title":"2. Topographic maps","text":"terra extension ideal tool visualize georeference topographic data, ETOPO global topographic relief model. provide example, downscaled 0.1x0.1 degree-resolution version ETOPO1 version model deposited package’s website, can read following line code: can visualized default viridis palette using plot function:  can get work topographic ramp, referring col abd breaks arguments plot, .  Note default use categorical legend, ideal. Setting type=\"continuous\" reposition color values, making difficult assert correctness legend--values relationship. legend desired, can plotted ramplegend function:  leaves much better visual impression.","code":"library(terra) #> terra 1.8.54 #>  #> Attaching package: 'terra' #> The following object is masked from 'package:fields': #>  #>     describe etopo <- rast(\"http://adamtkocsis.com/rampage/etopo1_Ice_c_gdal_0.1.nc\") etopo #> class       : SpatRaster  #> size        : 1800, 3600, 1  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84  #> source      : etopo1_Ice_c_gdal_0.1.nc  #> name        : etopo1_Ice_c_gdal_0.1 plot(etopo) plot(etopo, col=topoRamp$col, breaks=topoRamp$breaks) plot(etopo, col=topoRamp$col, breaks=topoRamp$breaks, legend=FALSE) ramplegend(col=topoRamp$col,breaks=topoRamp$breaks, cex=0.3, x=-160, y=20)"},{"path":"https://adamtkocsis.com/rampage/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adam T. Kocsis. Maintainer, author. . Funder. . Funder.","code":""},{"path":"https://adamtkocsis.com/rampage/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kocsis (2025). rampage : Calibrated Color Ramps. R package version 0.2.0, https://adamtkocsis.com/rampage/.","code":"@Manual{,   title = {rampage : Calibrated Color Ramps},   author = {Adam T. Kocsis},   year = {2025},   note = {R package version 0.2.0},   url = {https://adamtkocsis.com/rampage/}, }"},{"path":[]},{"path":"https://adamtkocsis.com/rampage/index.html","id":"stretchable-color-ramps","dir":"","previous_headings":"","what":"Stretchable Color Ramps","title":"Calibrated Color Ramps","text":"package written sheer anger. Many visulization tasks involve plotting heatmaps, colors represent numeric values. high number extensions pre-defined components make representations color palettes, precise control exact relationship colors values constant technical nuissance. rampage extension aims make control easier allow users construct use color ramps based explicit relationships colors values.","code":""},{"path":"https://adamtkocsis.com/rampage/index.html","id":"example-1-topographies","dir":"","previous_headings":"","what":"Example 1: Topographies","title":"Calibrated Color Ramps","text":"Consider coarsened version ETOPO topographic relief model (0.25x0.25 degree resolution cell-registered version ETOPO1), using widely-used extension package terra.","code":"library(rampage) library(terra)  # load data etopo <- rast(\"https://adamtkocsis.com/rampage/etopo1_Ice_c_gdal_0.1.nc\")  # use a built-in dataset to get color to elevation bindings data(topos)  # the levels levs<- topos$etopo  # expand and plot ramp <- expand(levs, n=500)  # plotting plot(etopo, col=ramp$col, breaks=ramp$breaks, legend=FALSE)"},{"path":"https://adamtkocsis.com/rampage/index.html","id":"example-2-heatmaps","dir":"","previous_headings":"","what":"Example 2: Heatmaps","title":"Calibrated Color Ramps","text":"visual message heatmap-figure highly influenced dominance specific colors heatmap. instance, let’s consider example data come form slightly shifted (non-zero mean) Gaussian distribution:  small set data wrapped matrix give values positional context, similar spatial data. data visualized, automatic ramping use range values provided plotting function: instance, default plotting fields package:  solution fine, goal heatmap visualize values relative overall distribution, compared value dimension. example, assuming values represent changes previous state, might important highlight 0 level, clearly separating increases (positive) decreases (negative values), can use yellow color. task can solved defining calbirated color ramp, can constructed value (z) color (color) tiepoints data.frame: data.frame can expanded full, calibrated color ramp expand function. resulting object can used control fields::imagePlot via breaks argument:  second figure shows data, red color now consistently indicates decreases visualized field.","code":"library(rampage)  set.seed(1) # random values in a matrix vals<- matrix(rnorm(100, mean=-0.7, sd=0.5), ncol=10)  # the histogram of the values hist(vals, breaks=20) abline(v=mean(vals), col=\"red\") library(fields) imagePlot(vals, col=rev(gradinv(100))) ## Loading required package: spam  ## Spam version 2.10-0 (2023-10-23) is loaded. ## Type 'help( Spam)' or 'demo( spam)' for a short introduction  ## and overview of this package. ## Help for individual functions is also obtained by adding the ## suffix '.spam' to the function name, e.g. 'help( chol.spam)'.  ##  ## Attaching package: 'spam'  ## The following objects are masked from 'package:base': ##  ##     backsolve, forwardsolve  ## Loading required package: viridisLite  ##  ## Try help(fields) to get started.  ##  ## Attaching package: 'fields'  ## The following object is masked from 'package:terra': ##  ##     describe df <- data.frame(   z=c(-2, -0.5, 0, 0.5, 2),   color=rev(gradinv(5)) ) df ##      z   color ## 1 -2.0 #690720 ## 2 -0.5 #E22C28 ## 3  0.0 #FFF99A ## 4  0.5 #76ACCE ## 5  2.0 #33358A # calibrated color ramp ramp <- expand(df, n=100) # check: str(ramp)  # The modified color ramp  imagePlot(vals, breaks=ramp$breaks, col=ramp$col)"},{"path":"https://adamtkocsis.com/rampage/index.html","id":"connecting-to-additional-r-extensions","dir":"","previous_headings":"","what":"Connecting to additional R extensions","title":"Calibrated Color Ramps","text":"Using fields just single example. Many R packages rely similar breaks col argument pair explicitly control heatmap levels. include (mention ), terra sf packages.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/colorpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap with colored points — colorpoints","title":"Heatmap with colored points — colorpoints","text":"function wrapper around points function, controlling color points similar ggplot, using S-style plotting. neither ramp, col breaks given, function default using internal gradinv palette 256 levels evenly distributed minimum maximum z.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/colorpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap with colored points — colorpoints","text":"","code":"colorpoints(   x,   y = NULL,   z,   ramp = NULL,   col = NULL,   breaks = NULL,   legend = list(x = \"topleft\"),   ... )"},{"path":"https://adamtkocsis.com/rampage/reference/colorpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap with colored points — colorpoints","text":"x x argument points. y y argument points. z numeric, variable visualize using colors. ramp calibramp-class object (including breaks colors). col vector colors. Used ramp given. breaks vector breaks. given, one element longer length col. legend list arguments passed ramplegend function. Set NULL want plot legend. ... Arguments passed points function.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/colorpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap with colored points — colorpoints","text":"function return value.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/colorpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap with colored points — colorpoints","text":"","code":"# random points set.seed(1) x <- rnorm(5000) # x coord y <- rnorm(5000) # y coord dist <- sqrt(x^2+y^2) # distance from origin  # default plotting plot(x,y, col=NA) colorpoints(x=x, y=y, z=dist)   # custom color scheme levs<- data.frame(color=rainbow(5), z=c(0, 0.5,1, 3, 4.5)) ramp <-expand(levs, n=256)  # very customized (experiment with difference device sizes!) plot(x,y, col=NA, main=\"Distance to origin\") colorpoints(x=x, y=y, z=dist,   col=paste0(ramp$col, \"BB\"),   breaks=ramp$breaks,   pch=16,   legend=list(x=3,y=0,cex=0.7, box.args=list(border=NA)))"},{"path":"https://adamtkocsis.com/rampage/reference/expand.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a calibrated color ramp object from color-tiepoint data.frames — expand","title":"Create a calibrated color ramp object from color-tiepoint data.frames — expand","text":"Create ramp palettes fixed color positions.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/expand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a calibrated color ramp object from color-tiepoint data.frames — expand","text":"","code":"expand(x = NULL, n, color = \"color\", z = \"z\", ...)"},{"path":"https://adamtkocsis.com/rampage/reference/expand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a calibrated color ramp object from color-tiepoint data.frames — expand","text":"x data.frame object two columns: color hexadecimal color values, z position. n single integer number. color chraracter value, column name colors x, defaults \"color\". Alternatively, character vector hexadecimal color values, length z. z character value, column name values x, defaults \"z\". Alternatively, numeric vector color values (must length color. ... Arguments passed colorRampPalette function.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/expand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a calibrated color ramp object from color-tiepoint data.frames — expand","text":"calibramp-class object (see description ).","code":""},{"path":"https://adamtkocsis.com/rampage/reference/expand.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a calibrated color ramp object from color-tiepoint data.frames — expand","text":"function creates objects S3 class calibramp. calibramp-class lists three elements: col hexadecimal color values, mid: z-values midpoints (one every color), breaks: separator borders color values. Color interpolation executed linearly, using colorRampPalette, order values forced ascending, values mid halfway breaks.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/expand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a calibrated color ramp object from color-tiepoint data.frames — expand","text":"","code":"library(rampage) data(topos) ramp <- expand(topos$havanna2, n=200) plot(ramp)"},{"path":"https://adamtkocsis.com/rampage/reference/limit.html","id":null,"dir":"Reference","previous_headings":"","what":"Limit range of values in a SpatRaster object — limit","title":"Limit range of values in a SpatRaster object — limit","text":"Shorthand limiting maximum minimum values SpatRaster-class object.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/limit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limit range of values in a SpatRaster object — limit","text":"","code":"limit(x, y = NULL, min = NULL, max = NULL)"},{"path":"https://adamtkocsis.com/rampage/reference/limit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limit range of values in a SpatRaster object — limit","text":"x Object limit, SpatRaster-class object. y Either range (.e. numeric vector two values), data.frame positioned color values (column z indicates values), calibrated ramp (e.g. produced expand). min y given, minimum value data.frame. max y given, maximum value data.frame.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/limit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Limit range of values in a SpatRaster object — limit","text":"SpatRaster object.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/limit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Limit range of values in a SpatRaster object — limit","text":"","code":"# This function relies on the terra extension if(requireNamespace(\"terra\", quietly=TRUE)){  library(terra)   # Example 1. Using specific values   # a SpatRaster object   r<- terra::rast()   # populate with a Gaussian distribution   terra::values(r) <- rnorm(terra::ncell(r), 0.5,1 )   # and limit   rLimit <- limit(r, min=-0.2, max=0.2)   plot(rLimit)     # Example 2. Using an expanded color ramp   # Create a data.frame   df <- data.frame(     z=c(-1, -0.2, 0, 0.2, 1),     color=rev(gradinv(5))   )   ramp <- expand(df, n=200)   rLimited <- limit(r, y=ramp)   # default   plot(rLimited)    # manual ramping.   plot(rLimited, breaks=ramp$breaks, col=ramp$col,     legend=FALSE)    # temporary solution for manual legend   # Marginal ramps will be implemented later   ramplegend(x=140, y=90, ramp=ramp, cex=0.5,     at=c(-1, 0, 1), label=c(\"< -1\", 0, \"> +1\"))   }"},{"path":"https://adamtkocsis.com/rampage/reference/paleomap.html","id":null,"dir":"Reference","previous_headings":"","what":"Topographic gradient map color map of the PALEOMAP project — paleomap","title":"Topographic gradient map color map of the PALEOMAP project — paleomap","text":"elevation color bindings work C. Scotese. Data Scotese, C. R., Vérard, C., Burgener, L., Elling, R. P., & Kocsis, . T. (2025). Cretaceous World: Plate Tectonics, Paleogeography, Paleoclimate. Geological Society, London, Special Publications, 544(1), SP544–2024..","code":""},{"path":"https://adamtkocsis.com/rampage/reference/paleomap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Topographic gradient map color map of the PALEOMAP project — paleomap","text":"","code":"data(paleomap)"},{"path":"https://adamtkocsis.com/rampage/reference/paleomap.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Topographic gradient map color map of the PALEOMAP project — paleomap","text":"calibramp-class list 3 numerics: col : color levels hexadecimal RGB values. breaks : boundaries individual levels. mid : mid values color levels.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/paleomap.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Topographic gradient map color map of the PALEOMAP project — paleomap","text":"https://zenodo.org/records/10659112","code":""},{"path":"https://adamtkocsis.com/rampage/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize a calibrated color ramp — plot.calibramp","title":"Visualize a calibrated color ramp — plot.calibramp","text":"method can used inspect visualize calbirated color ramp object.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize a calibrated color ramp — plot.calibramp","text":"","code":"# S3 method for class 'calibramp' plot(x, ...)  rampplot(   x,   breaks = FALSE,   breaklabs = TRUE,   axis.args = list(side = 2),   ylab = \"z\",   xlab = \"\" )"},{"path":"https://adamtkocsis.com/rampage/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize a calibrated color ramp — plot.calibramp","text":"x calibirated color ramp object (calibramp-class object). ... Arguments passed rampplot function. breaks distribution breaks visualized? breaklabs minimum maximum break labels visualized? axis.args Arguments passed axis function. ylab y-axis label. xlab x-axis label.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize a calibrated color ramp — plot.calibramp","text":"functions return values.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize a calibrated color ramp — plot.calibramp","text":"","code":"# the paleomap ramp data(paleomap) plot(paleomap)  # 0-calibrated, expanded ramp tiepoints <- data.frame(z=c(c(-1, -0.1, 0, 0.1, +1)), color=gradinv(5)) ramp <- expand(tiepoints, n=255) plot(ramp)"},{"path":"https://adamtkocsis.com/rampage/reference/rampage.html","id":null,"dir":"Reference","previous_headings":"","what":"Strechable Color Ramps — rampage","title":"Strechable Color Ramps — rampage","text":"Value-calibrated color ramps can useful emphasize patterns weirdly distributed data. Tiepoints can used fix colors specific values, resulting association can expanded full color ramps. ramps can used variety cases heatmap type plotting necessary, including visualization raster polygon spatial data.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/rampage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strechable Color Ramps — rampage","text":"still Beta version. R, free software comes ABSOLUTELY WARRANTY. Nevertheless, notes found bugs suggestions welcome.","code":""},{"path":[]},{"path":"https://adamtkocsis.com/rampage/reference/rampage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Strechable Color Ramps — rampage","text":"Adam T. Kocsis (adam.t.kocsis@gmail.com)","code":""},{"path":"https://adamtkocsis.com/rampage/reference/ramplegend.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a heatmap legend based on calibrated color ramp values — ramplegend","title":"Create a heatmap legend based on calibrated color ramp values — ramplegend","text":"Optional legend cases calibramp objects used.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/ramplegend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a heatmap legend based on calibrated color ramp values — ramplegend","text":"","code":"ramplegend(   x = \"topleft\",   y = NULL,   shift = c(0, 0),   ramp = NULL,   col = NULL,   breaks = NULL,   zlim = NULL,   height = 3,   width = 0.3,   tick.length = 0.15,   cex = 1,   box.args = list(col = \"#ffffffbb\"),   horizontal = FALSE,   at = NULL,   label = NULL )"},{"path":"https://adamtkocsis.com/rampage/reference/ramplegend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a heatmap legend based on calibrated color ramp values — ramplegend","text":"x Position legend left coordinate legend box. Either numeric coordinate value \"topleft\", \"topright\", \"bottomleft\" \"bottomright\". y Coordinate upper edge legend (needed). shift Used instead inset argument default legend. plotted within inner plotting area, x y user coordinates position legend shifted. ramp calibrated color ramp object. Either ramp col breaks required. col Vector colors. breaks Breaks colors. zlim numeric vector two values, passed trimramp.  low high extreme values shown legend. height Height legend bar inches. width Width legend bar inches. tick.length length legend's ticks. cex Legend size scaler. box.args box's arguments. horizontal Legend orientation. yet implemented legend drawn z dimension? label labels","code":""},{"path":"https://adamtkocsis.com/rampage/reference/ramplegend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a heatmap legend based on calibrated color ramp values — ramplegend","text":"function return value.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/ramplegend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a heatmap legend based on calibrated color ramp values — ramplegend","text":"","code":"# example with colored points # basic points v <- seq(0,20, 0.01) sine <- sin(v)  # visualize as a plot plot(v,sine)  # colors for sine values levs<- data.frame(color=gradinv(5), z=c(-1, -0.2, 0, 0.2, 1)) ramp<- expand(levs, n=256)  # colored points colorpoints(x=v, y=sine, z=sine, cex=6, pch=16, legend=NULL)  # the legend ramplegend(x=0, y=0.3, ramp=ramp, cex=0.5, box.args=list(border=NA, col=NA))    # example with histogram set.seed(1) x <- rnorm(3000, 3,1) levs<- data.frame(color=gradinv(7), z=c(-1, 1,1.04, 3, 4.96, 5, 7)) ramp <-expand(levs, n=400)  # histogram showing distribution hist(x, col=ramp$col, breaks=ramp$breaks, border=NA) ramplegend(\"topleft\", ramp=ramp, at=c(1.04, 3, 4.96), label=c(\"-1.96 SD\", \"mean\", \"+1.96 SD\"))    # example with volcano data(volcano) data(topos)  # create ramp levs <- topos$jakarta[topos$jakarta$z>0,] levs$z <- c(200, 180, 165, 130, 80) ramp <-expand(levs, n=100)  image(volcano, col=ramp$col, breaks=ramp$breaks) ramplegend(x=0.8, y=0.8, ramp=ramp, cex=0.9)"},{"path":"https://adamtkocsis.com/rampage/reference/ramps.html","id":null,"dir":"Reference","previous_headings":"","what":"Color gradient ramps — ramps","title":"Color gradient ramps — ramps","text":"Contains functions produced colorRampPalette function.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/ramps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color gradient ramps — ramps","text":"","code":"gradinv(n)"},{"path":"https://adamtkocsis.com/rampage/reference/ramps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color gradient ramps — ramps","text":"n (numeric) Number different colors generate palette","code":""},{"path":"https://adamtkocsis.com/rampage/reference/ramps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color gradient ramps — ramps","text":"character vector color values.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/ramps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Color gradient ramps — ramps","text":"can also view single palettes individually. following color palettes implemented: gradinv(): inverse heatmap, primarily intended emphasize distinctions -change (yellow) change (blue/red) cases. Based color blindness simulator Coblis, palette color disability-friendly, except monochromacy/achromatopsia, two change scenarios (red blue) become difficult distinguish. Additional markings (e.g. labels indicating high low) recommended cases.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/ramps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color gradient ramps — ramps","text":"","code":"cols <- gradinv(20) plot(1:20, col=cols, pch=16, cex=2)"},{"path":"https://adamtkocsis.com/rampage/reference/topos.html","id":null,"dir":"Reference","previous_headings":"","what":"Topographic color palettes with tiepoints — topos","title":"Topographic color palettes with tiepoints — topos","text":"object contains data.frame-class objects used expand function produce full calibrated color ramps.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/topos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Topographic color palettes with tiepoints — topos","text":"","code":"data(topos)"},{"path":"https://adamtkocsis.com/rampage/reference/topos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Topographic color palettes with tiepoints — topos","text":"list 6 data.frame elements: demcmap : \"demcmap\" theme, based MatLab's demcmap. etopo : \"etopo\" theme, approximate elevation-color assignments based ETOPO Global Relief Model poster (https://www.ncei.noaa.gov/media/3340). jakarta : \"Jakarta\" theme, color values Deviantart user Arcanographia. havanna2 : \"Havanna-2\" theme, color values Deviantart user Arcanographia. tokio1 : \"Tokio-1\" theme, color values Deviantart user Arcanographia. zagreb : \"Zagreb\" theme, color values Deviantart user Arcanographia.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/topos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Topographic color palettes with tiepoints — topos","text":"","code":"data(topos) jakExp <- expand(topos$jakarta, n=200) plot(jakExp)"},{"path":"https://adamtkocsis.com/rampage/reference/trimramp.html","id":null,"dir":"Reference","previous_headings":"","what":"Trimming a calibrated color ramp object. — trimramp","title":"Trimming a calibrated color ramp object. — trimramp","text":"Modify minimum maximum values calibramp-class object produced expand function.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/trimramp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trimming a calibrated color ramp object. — trimramp","text":"","code":"trimramp(x, low = NULL, high = NULL)"},{"path":"https://adamtkocsis.com/rampage/reference/trimramp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trimming a calibrated color ramp object. — trimramp","text":"x calibrated color ramp (e.g. calibramp-class object. low single numeric value, minimum value calibrated ramp. high single numeric value, maximum value calibrated ramp.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/trimramp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trimming a calibrated color ramp object. — trimramp","text":"trimmed version x, another calibramp-class object.","code":""},{"path":"https://adamtkocsis.com/rampage/reference/trimramp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trimming a calibrated color ramp object. — trimramp","text":"","code":"data(paleomap) trimmed <- trimramp(paleomap, low=-500, high=1500) plot(trimmed)"},{"path":[]},{"path":"https://adamtkocsis.com/rampage/news/index.html","id":"added-0-2-0","dir":"Changelog","previous_headings":"","what":"Added","title":"rampage 0.2.0 - 2025-06-30","text":"colorpoints function ramplegend functions efficient visualization ramps. paleomap data object. etopo demcmap data.frames topos. Finished unit testing suite package website.","code":""},{"path":"https://adamtkocsis.com/rampage/news/index.html","id":"fixed-0-2-0","dir":"Changelog","previous_headings":"","what":"Fixed","title":"rampage 0.2.0 - 2025-06-30","text":"Load documentation issues.","code":""},{"path":"https://adamtkocsis.com/rampage/news/index.html","id":"known-issuesmissing-0-2-0","dir":"Changelog","previous_headings":"","what":"Known issues/missing","title":"rampage 0.2.0 - 2025-06-30","text":"ramplegend function x=\"left\", x=\"right\", \"x=bottom\" top \"x=left\" settings, horizontal=TRUE yet implemented, neither margial legends.","code":""},{"path":[]},{"path":"https://adamtkocsis.com/rampage/news/index.html","id":"added-0-1-0","dir":"Changelog","previous_headings":"","what":"Added","title":"rampage 0.1.0 - 2024-01-21","text":"First version.","code":""}]
